"""updates to indexes

Revision ID: 83c35c5f6fc0
Revises: c0cf1361e092
Create Date: 2025-01-06 11:23:11.798760

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "83c35c5f6fc0"
down_revision: Union[str, None] = "c0cf1361e092"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(
        "idx_categories_depth",
        "categories",
        ["depth", "is_active"],
        unique=False,
        postgresql_using="btree",
    )
    op.create_index(
        "idx_categories_hierarchy",
        "categories",
        ["path", "is_active"],
        unique=False,
        postgresql_using="btree",
    )
    op.create_index(
        "idx_categories_ordering",
        "categories",
        ["parent_id", "sort_order", "is_active"],
        unique=False,
        postgresql_using="btree",
    )
    op.create_index(
        "idx_categories_path_search",
        "categories",
        ["path"],
        unique=False,
        postgresql_using="btree",
        postgresql_where=sa.text("is_active = true"),
    )
    op.create_index(
        "uq_category_parent_slug",
        "categories",
        ["parent_id", "slug"],
        unique=True,
        postgresql_where=sa.text("is_active = true"),
    )
    op.add_column(
        "contact_endorsements",
        sa.Column("verification_notes", sa.String(length=200), nullable=True),
    )
    op.create_index(
        "idx_contact_endorsements_community",
        "contact_endorsements",
        ["community_id", "created_at"],
        unique=False,
        postgresql_include=["rating", "is_verified"],
    )
    op.create_index(
        "idx_contact_endorsements_verified",
        "contact_endorsements",
        ["contact_id", "is_verified", "rating"],
        unique=False,
        postgresql_where=sa.text("is_verified = true"),
    )
    op.create_index(
        "idx_contacts_contact_name_trgm",
        "contacts",
        [sa.text("contact_name gin_trgm_ops")],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        "idx_contacts_endorsement_metrics",
        "contacts",
        [
            "endorsements_count",
            "average_rating",
            "verified_endorsements_count",
            "is_active",
        ],
        unique=False,
    )
    op.create_index(
        "idx_contacts_primary_contact_name",
        "contacts",
        ["primary_contact_last_name", "primary_contact_first_name"],
        unique=False,
    )
    op.create_index(
        "idx_services_availability",
        "services",
        ["is_remote_available", "requires_consultation", "is_active"],
        unique=False,
        postgresql_where=sa.text("is_active = true"),
    )
    op.create_index(
        "idx_services_price",
        "services",
        ["category_id", "base_price", "is_active"],
        unique=False,
        postgresql_where=sa.text("is_active = true"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "idx_services_price",
        table_name="services",
        postgresql_where=sa.text("is_active = true"),
    )
    op.drop_index(
        "idx_services_availability",
        table_name="services",
        postgresql_where=sa.text("is_active = true"),
    )
    op.drop_index("idx_contacts_primary_contact_name", table_name="contacts")
    op.drop_index("idx_contacts_endorsement_metrics", table_name="contacts")
    op.drop_index(
        "idx_contacts_contact_name_trgm", table_name="contacts", postgresql_using="gin"
    )
    op.drop_index(
        "idx_contact_endorsements_verified",
        table_name="contact_endorsements",
        postgresql_where=sa.text("is_verified = true"),
    )
    op.drop_index(
        "idx_contact_endorsements_community",
        table_name="contact_endorsements",
        postgresql_include=["rating", "is_verified"],
    )
    op.drop_column("contact_endorsements", "verification_notes")
    op.drop_index(
        "uq_category_parent_slug",
        table_name="categories",
        postgresql_where=sa.text("is_active = true"),
    )
    op.drop_index(
        "idx_categories_path_search",
        table_name="categories",
        postgresql_using="btree",
        postgresql_where=sa.text("is_active = true"),
    )
    op.drop_index(
        "idx_categories_ordering", table_name="categories", postgresql_using="btree"
    )
    op.drop_index(
        "idx_categories_hierarchy", table_name="categories", postgresql_using="btree"
    )
    op.drop_index(
        "idx_categories_depth", table_name="categories", postgresql_using="btree"
    )
    # ### end Alembic commands ###
