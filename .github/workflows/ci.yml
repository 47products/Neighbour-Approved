name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build and Test Application
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    env:
      POSTGRES_USER: "test_user"
      POSTGRES_PASSWORD: "test_password"
      POSTGRES_HOST: "localhost"
      POSTGRES_DB: "test_db"
      LOG_LEVEL: "INFO"

    steps:
      # Checkout the repository
      - name: 🛠️ Checkout Code
        uses: actions/checkout@v4

      # Set up Python environment
      - name: ⚙️ Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      # Cache pip dependencies
      - name: 📦 Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Create virtual environment
      - name: 🌐 Create virtual environment
        run: python -m venv .venv

      # Install dependencies
      - name: 📥 Install dependencies
        run: |
          . .venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Add PYTHONPATH to include the app directory
      - name: 🔧 Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

      # Run code formatting checks
      - name: 🧹 Run Black (check mode)
        run: |
          . .venv/bin/activate
          black --check .

      # Run test suite with coverage
      - name: ✅ Run Tests with Coverage
        run: |
          . .venv/bin/activate
          pytest --cov=app --cov-report=term-missing --cov-report=xml

